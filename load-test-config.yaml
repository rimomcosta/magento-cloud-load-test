# =============================================================================
# Magento Load Test Configuration
# =============================================================================
# This file allows you to customize every aspect of the load test without 
# modifying the script code. All values are optional - the script will use
# sensible defaults if any section is missing.

# =============================================================================
# LOAD TEST PARAMETERS
# =============================================================================
loadTest:
  # Number of concurrent virtual users (simulated customers)
  # Light: 10-50, Medium: 100-200, Heavy: 300-500, Stress: 500+
  virtualUsers: 500
  
  # Time to gradually increase users from 0 to target (prevents sudden spikes)
  # Recommended: 30s-2m depending on target load
  rampUpDuration: "60s"
  
  # Time to maintain peak load (main testing period)
  # Typical: 2m-10m, Production testing: 5m-30m
  sustainedDuration: "5m"
  
  # Time to gradually decrease users from target to 0 (graceful shutdown)
  # Recommended: 30s-1m
  rampDownDuration: "60s"

# =============================================================================
# PERFORMANCE THRESHOLDS
# =============================================================================
performance:
  # Maximum time to wait for any HTTP request (prevents hanging)
  # Heavy load: 60s, Light load: 30s
  httpTimeout: "60s"
  
  # Maximum acceptable HTTP error rate (0.0-1.0)
  # 0.05 = 5% errors, 0.25 = 25% errors (heavy load tolerance)
  httpErrorThreshold: 0.25
  
  # Maximum acceptable HTTP request duration in milliseconds
  # 95th percentile - 95% of requests must be faster than this
  httpDurationThreshold: 60000
  
  # Page-specific performance thresholds (milliseconds)
  # These should reflect your site's actual performance characteristics
  homepageDurationThreshold: 45000   # Homepage with caching
  productDurationThreshold: 50000    # Product pages (complex)
  categoryDurationThreshold: 50000   # Category pages (listings)
  searchDurationThreshold: 45000     # Search results
  cartDurationThreshold: 45000       # Cart operations

# =============================================================================
# USER BEHAVIOR SIMULATION
# =============================================================================
userBehavior:
  # Think time between user actions (seconds)
  # Simulates real user reading/decision time
  minThinkTime: 1        # Minimum pause between actions
  maxThinkTime: 4        # Maximum pause between actions
  
  # User journey distribution (must sum to 1.0 or less)
  # Controls what percentage of users follow each shopping pattern
  comprehensiveShoppingPercentage: 0.2   # Multi-category browsers
  browseJourneyPercentage: 0.4           # Traditional shoppers
  searchJourneyPercentage: 0.2           # Search-driven shoppers
  cartJourneyPercentage: 0.1             # Cart abandoners
  windowShoppingPercentage: 0.05         # Browsers only
  quickBuyerPercentage: 0.05             # Quick purchasers

# =============================================================================
# E-COMMERCE FLOW CONFIGURATION
# =============================================================================
ecommerceFlow:
  # Maximum categories a user will browse in one session
  # Realistic range: 2-4 categories per shopping session
  maxCategoriesPerSession: 3
  
  # Maximum products viewed per category
  # Realistic range: 1-5 products before moving on
  maxProductsPerCategory: 4
  
  # Maximum products a user will add to cart
  # Realistic range: 1-5 items per order
  maxProductsInCart: 5
  
  # Percentage of users who complete checkout (0.0-1.0)
  # E-commerce average: 0.3-0.7 (30-70%) - increased for more cart/checkout traffic
  checkoutCompletionRate: 0.8
  
  # Percentage of users who return to previous categories (0.0-1.0)
  # Simulates comparison shopping behavior
  categoryReturnRate: 0.6
  
  # Percentage of users who compare products (0.0-1.0)
  # Simulates users viewing multiple products before deciding
  productComparisonRate: 0.4
  
  # Quantity range for add-to-cart operations
  addToCartMinQty: 1     # Minimum items to add
  addToCartMaxQty: 3     # Maximum items to add

# =============================================================================
# REALISTIC BROWSING PATTERNS
# =============================================================================
browsingPatterns:
  # Maximum page views per user session
  # Realistic range: 5-15 pages per session
  maxBrowsingActions: 12
  minBrowsingActions: 5
  
  # Probability of following different link types (0.0-1.0)
  relatedProductFollowRate: 0.6    # Users often check related products (increased)
  paginationFollowRate: 0.4        # Users browse through category pages (increased)
  breadcrumbFollowRate: 0.3        # Users navigate back using breadcrumbs (increased)
  
  # Interest-based navigation probabilities
  interestMatchFollowRate: 0.8     # Follow links matching user interests (increased)
  randomExplorationRate: 0.5       # Random exploration outside interests (increased)
  
  # Context-based behavior modifiers
  distractionRate: 0.15            # Chance to change browsing focus
  comparisonShoppingRate: 0.4      # Chance to compare similar products
  impulseBuyingRate: 0.25          # Chance for impulse purchases

# =============================================================================
# URL DISCOVERY AND CRAWLING
# =============================================================================
urlDiscovery:
  # Enable automatic discovery of real URLs from your site
  # true: Crawl site for real URLs, false: Use only predefined URLs
  enableUrlDiscovery: true
  
  # Use fallback URLs if discovery fails
  # true: Use predefined URLs as backup, false: Skip if discovery fails
  enableFallbackUrls: true
  
  # Enable deep crawling (crawl category pages to find more products)
  # true: Crawl deeper for more URLs, false: Only crawl homepage
  enableDeepCrawling: false
  
  # Maximum depth for URL crawling
  # 1: Homepage only, 2: Homepage + categories, 3: Homepage + categories + products
  maxCrawlDepth: 1
  
  # Validate URLs exist before using them (slower but more accurate)
  # true: Check each URL, false: Use discovered URLs without validation
  validateUrlsBeforeUse: false
  
  # Limits for discovered URLs (prevents memory issues with large sites)
  maxProducts: 500       # Maximum product URLs to store
  maxCategories: 50      # Maximum category URLs to store
  maxSearchTerms: 20     # Maximum search terms to store

# =============================================================================
# API LOAD TESTING
# =============================================================================
api:
  # Enable API load testing alongside frontend testing
  # Simulates modern headless/PWA frontend behavior
  enableApiLoad: true
  
  # Enable specific API types
  enableGraphqlLoad: true    # GraphQL queries (modern Magento)
  enableRestLoad: true       # REST API calls (traditional integration)
  
  # Percentage of user sessions that include API calls (0.0-1.0)
  # 0.1 = 10% of users make API calls (reduce GraphQL dominance)
  apiTrafficPercentage: 0.1
  
  # GraphQL query page size for product searches
  # Typical range: 5-20 products per query
  graphqlSearchPageSize: 5

# =============================================================================
# CACHE BYPASS CONFIGURATION
# =============================================================================
cache:
  # Percentage of requests that bypass CDN cache (0.0-1.0)
  # Ensures some traffic reaches your backend for monitoring
  # 0.1 = 10%, 0.3 = 30% (good for New Relic visibility)
  cacheBypassPercentage: 0.3
  
  # Enable cache bypass functionality
  # true: Some requests bypass cache, false: All requests use cache
  enableCacheBypass: true

# =============================================================================
# REAL SITE URLS
# =============================================================================
# These are real URLs discovered from your Magento site
# Update these if your site structure changes
realUrls:
  # Real category slugs from your site
  # These should be actual category URLs that exist
  fallbackCategorySlugs:
    - "category-4"           # Main category
    - "category-5"           # Secondary category
    - "gear"                 # Equipment category
    - "training"             # Training/fitness category
    - "collections/yoga-new" # Special collections
  
  # Real product URLs from your site
  # These should be actual product pages that exist
  realProductUrls:
    - "radiant-tee.html"              # Apparel
    - "breathe-easy-tank.html"        # Apparel
    - "argus-all-weather-tank.html"   # Apparel
    - "hero-hoodie.html"              # Apparel
    - "fusion-backpack.html"          # Gear/Bags
    - "push-it-messenger-bag.html"    # Gear/Bags
    - "sprite-yoga-companion-kit.html" # Fitness
    - "affirm-water-bottle.html"      # Accessories
    - "quest-lumaflex-tone-band.html" # Fitness equipment
    - "fitbit-charge-3.html"          # Electronics
  
  # Search terms that will return results on your site
  # Should be terms that match your product catalog
  fallbackSearchTerms:
    - "shirt"    # Apparel
    - "pants"    # Apparel
    - "shoes"    # Footwear
    - "bag"      # Accessories
    - "watch"    # Electronics
    - "dress"    # Apparel
    - "jacket"   # Apparel
    - "hat"      # Accessories
    - "belt"     # Accessories
    - "socks"    # Apparel

# =============================================================================
# MAGENTO PATHS
# =============================================================================
# Standard Magento paths - usually don't need to change these
paths:
  cartPagePath: "/checkout/cart/"                    # Shopping cart page
  checkoutPagePath: "/checkout/onepage/"             # Checkout process
  addToCartPath: "/checkout/cart/add/"               # Add to cart endpoint
  searchResultPathTemplate: "/catalogsearch/result/?q={q}"  # Search results ({q} = search term)
  graphqlPath: "/graphql"                            # GraphQL endpoint
